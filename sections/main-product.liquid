{%- liquid
  assign product_media = product.media | default: product.featured_media
  assign short_description = product.description | strip_html | truncate: 200
  assign is_long_description = false
  if product.description.size > 200
    assign is_long_description = true
  endif
-%}

<style>
  .main-product-page {
    font-family: sans-serif;
    margin: 0 auto;
    padding-top: 100px;
  }
  .product-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 100px;
  }
  .product-media-gallery {
    display: flex;
    gap: 20px;
  }
  .thumbnail-list-vertical {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  .thumbnail-item {
    cursor: pointer;
    border: 1px solid #ddd;
    border-radius: 4px;
    overflow: hidden;
  }
  .thumbnail-item img {
    display: block;
    width: 80px;
    height: 80px;
    object-fit: cover;
  }
  .featured-media img {
    max-width: 100%;
    height: auto;
    display: block;
    cursor: zoom-in;
  }
  .product-details {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }
  .product-details h1 {
    font-size: 2.5em;
    font-weight: 300;
  }
  .product-price-and-rating {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 20px;
  }
  .product-price {
    font-size: 1.5em;
    font-weight: bold;
  }
  .product-rating .star-icon {
    color: black;
  }
  .product-description {
    line-height: 1.6;
    margin-bottom: 10px;
  }
  .read-more-link {
    color: #888;
    text-decoration: underline;
    cursor: pointer;
    font-size: 0.9em;
  }
  .product-details-container {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }
  .button-group {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  .add-to-cart-button,
  .buy-it-now-button {
    width: 100%;
    border: 1px solid black;
    padding: 10px 20px;
    font-family: Montserrat;
    font-size: 18px;
    background-color: transparent;
    font-weight: bold;
    text-transform: uppercase;
    cursor: pointer;
  }
  .buy-it-now-button {
    background-color: black;
    color: white;
  }
  .buy-it-now-button {
    position: relative;
    overflow: hidden;
    width: 100%;
    padding: 10px 20px;
    background-color: black;
    color: white;
    font-family: Montserrat;
    font-size: 18px;
    font-weight: bold;
    text-transform: uppercase;
    border: 1px solid black;
    cursor: pointer;
    z-index: 1;
    transition: all 0.4s ease;
  }
  .buy-it-now-button::before {
    content: '';
    position: absolute;
    top: -1px;
    left: -1px;
    width: 0;
    height: calc(100% + 2px);
    background-color: #f0f0f0;
    transition: all 0.4s ease;
    z-index: -1;
  }
  .buy-it-now-button:hover {
    color: black;
  }
  .buy-it-now-button:hover::before {
    width: calc(100% + 2px);
  }
  .fullscreen-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 1000;
  }
  .fullscreen-overlay.active {
    display: flex;
  }
  .fullscreen-content {
    position: relative;
    width: 90%;
    height: 90%;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .fullscreen-image {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
  }
  .fullscreen-close {
    position: absolute;
    top: 20px;
    right: 30px;
    color: white;
    font-size: 40px;
    font-weight: bold;
    cursor: pointer;
    background: none;
    border: none;
    padding: 0;
  }
  .fullscreen-nav-button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    color: white;
    font-size: 60px;
    cursor: pointer;
    background: none;
    border: none;
    padding: 0 15px;
    opacity: 0.7;
    transition: opacity 0.3s ease;
  }
  .fullscreen-nav-button:hover {
    opacity: 1;
  }
  .fullscreen-nav-button.prev {
    left: 20px;
  }
  .fullscreen-nav-button.next {
    right: 20px;
  }
  .fullscreen-nav-button svg {
    width: 50px;
    height: 50px;
    fill: currentColor;
  }
  .divider {
    width: 100%;
    height: 1px;
    background-color: #e0e0e0;
    margin: 10px 0;
  }

  .accordion {
    width: 100%;
    margin-top: 30px;
  }
  .accordion-item {
    border-top: 1px solid #e0e0e0;
    font-family: sans-serif;
  }
  .accordion-item:last-child {
    border-bottom: 1px solid #e0e0e0;
  }
  .accordion-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px 0;
    cursor: pointer;
    font-weight: bold;
  }
  .accordion-header span {
    font-size: 1em;
  }
  .accordion-icon svg {
    width: 14px;
    height: 14px;
    transition: transform 0.3s ease;
  }
  .accordion-icon.rotated svg {
    transform: rotate(45deg);
  }
  .accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
  }
  .accordion-content p {
    padding-bottom: 15px;
    margin: 0;
    line-height: 1.6;
  }
  .accordion-content img {
    max-width: 100%;
    height: auto;
    margin: 10px 0;
  }
  #description-content img {
    display: block;
    max-width: 100%;
    height: auto;
    margin: 15px 0;
  }
</style>

<div class="main-product-page pageWidth">
  <div class="product-grid">
    <div class="product-media-gallery">
      <div class="thumbnail-list-vertical">
        {%- for media in product_media -%}
          <div
            class="thumbnail-item"
            data-full-image-url="{{ media | image_url: width: 800 }}"
          >
            <img src="{{ media | image_url: width: 100 }}" alt="{{ media.alt | escape }}" loading="lazy">
          </div>
        {%- endfor -%}
      </div>
      <div class="featured-media">
        {%- if product.featured_media -%}
          <img
            id="main-product-image"
            src="{{ product.featured_media | image_url: width: 800 }}"
            alt="{{ product.featured_media.alt | escape }}"
          >
        {%- endif -%}
      </div>
    </div>

    <div class="product-details-container">
      <div class="product-details">
        <h1 class="product-title">{{ product.title }}</h1>
        <div class="product-price-and-rating">
          <div class="product-price">
            <span class="price-display">{{ product.price | money }}</span>
          </div>
        </div>
      </div>
      <div class="divider"></div>

      <div class="product-description">
        {{ short_description }}
        {% if is_long_description %}
          <div class="read-more-link" data-target="description-content">Read more</div>
        {% endif %}
      </div>

      {% form 'product', product, class: 'product-form' %}
        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">

        <div class="button-group">
          <button type="submit" name="add" class="add-to-cart-button">ADD TO CART</button>
          <button type="submit" name="buy_now" class="buy-it-now-button">BUY IT NOW</button>
        </div>
      {% endform %}
    </div>
  </div>

  <div class="accordion">
    <div class="accordion-item">
      <div class="accordion-header" data-target="description-content">
        <span>DESCRIPTION</span>
        <div class="accordion-icon">
          <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M14 7.99805H8V13.998H6V7.99805H0V5.99805H6V-0.00195312H8V5.99805H14V7.99805Z" fill="#2C2D2C" fill-opacity="0.7"/>
          </svg>
        </div>
      </div>
      <div class="accordion-content" id="description-content">
        {{ product.description }}
      </div>
    </div>
    <div class="accordion-item">
      <div class="accordion-header" data-target="details-content">
        <span>PRODUCT DETAILS</span>
        <div class="accordion-icon">
          <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M14 7.99805H8V13.998H6V7.99805H0V5.99805H6V-0.00195312H8V5.99805H14V7.99805Z" fill="#2C2D2C" fill-opacity="0.7"/>
          </svg>
        </div>
      </div>
      <div class="accordion-content" id="details-content">
        {{ product.metafields.custom.product_details }}
      </div>
    </div>
    <div class="accordion-item">
      <div class="accordion-header" data-target="shipping-content">
        <span>SHIPPING & RETURNS</span>
        <div class="accordion-icon">
          <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M14 7.99805H8V13.998H6V7.99805H0V5.99805H6V-0.00195312H8V5.99805H14V7.99805Z" fill="#2C2D2C" fill-opacity="0.7"/>
          </svg>
        </div>
      </div>
      <div class="accordion-content" id="shipping-content">
        <p>
          Shipping costs and delivery times vary depending on your location. Returns are accepted within 30 days of
          purchase. Please see our full policy for more details.
        </p>
      </div>
    </div>
  </div>
</div>

<div id="fullscreen-overlay" class="fullscreen-overlay">
  <button class="fullscreen-close">&times;</button>
  <div class="fullscreen-content">
    <button class="fullscreen-nav-button prev">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
        <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"/>
      </svg>
    </button>
    <img id="fullscreen-image" class="fullscreen-image" src="" alt="">
    <button class="fullscreen-nav-button next">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
        <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"/>
      </svg>
    </button>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const mainImage = document.getElementById('main-product-image');
    const thumbnails = document.querySelectorAll('.thumbnail-item');
    const fullscreenOverlay = document.getElementById('fullscreen-overlay');
    const fullscreenImage = document.getElementById('fullscreen-image');
    const closeButton = document.querySelector('.fullscreen-close');
    const prevButton = document.querySelector('.fullscreen-nav-button.prev');
    const nextButton = document.querySelector('.fullscreen-nav-button.next');
    const readMoreLink = document.querySelector('.read-more-link');
    let currentIndex = 0;

    const allImages = Array.from(thumbnails).map((thumb) => thumb.getAttribute('data-full-image-url'));

    function openFullscreen() {
      const currentMainImageUrl = mainImage.src;

      currentIndex = allImages.findIndex((url) => currentMainImageUrl.includes(url));

      if (currentIndex === -1) currentIndex = 0;

      fullscreenImage.src = allImages[currentIndex];
      fullscreenOverlay.classList.add('active');
    }

    function closeFullscreen() {
      fullscreenOverlay.classList.remove('active');
    }

    function updateFullscreenImage(index) {
      if (index >= 0 && index < allImages.length) {
        fullscreenImage.src = allImages[index];
        currentIndex = index;
      }
    }

    function scrollToAccordionItem(targetId) {
      const accordionHeader = document.querySelector(`.accordion-header[data-target="${targetId}"]`);
      if (accordionHeader) {
        const content = document.getElementById(targetId);
        const iconContainer = accordionHeader.querySelector('.accordion-icon');

        content.style.maxHeight = content.scrollHeight + 'px';
        iconContainer.classList.add('rotated');

        accordionHeader.scrollIntoView({ behavior: 'smooth', block: 'start' });
      }
    }

    if (mainImage && thumbnails.length > 0) {
      thumbnails.forEach((thumbnail, index) => {
        thumbnail.addEventListener('click', function () {
          const newImageUrl = this.getAttribute('data-full-image-url');
          mainImage.src = newImageUrl;
          currentIndex = index;
        });
      });

      mainImage.addEventListener('click', openFullscreen);
      closeButton.addEventListener('click', closeFullscreen);

      prevButton.addEventListener('click', () => {
        updateFullscreenImage((currentIndex - 1 + allImages.length) % allImages.length);
      });

      nextButton.addEventListener('click', () => {
        updateFullscreenImage((currentIndex + 1) % allImages.length);
      });

      document.addEventListener('keydown', function (event) {
        if (event.key === 'Escape' && fullscreenOverlay.classList.contains('active')) {
          closeFullscreen();
        }
      });
    }

    if (readMoreLink) {
      readMoreLink.addEventListener('click', function () {
        scrollToAccordionItem(this.getAttribute('data-target'));
      });
    }

    const accordionHeaders = document.querySelectorAll('.accordion-header');

    accordionHeaders.forEach((header) => {
      header.addEventListener('click', () => {
        const content = document.getElementById(header.dataset.target);
        const iconContainer = header.querySelector('.accordion-icon');

        if (content.style.maxHeight) {
          content.style.maxHeight = null;
          iconContainer.classList.remove('rotated');
        } else {
          content.style.maxHeight = content.scrollHeight + 'px';
          iconContainer.classList.add('rotated');
        }
      });
    });
  });
</script>
